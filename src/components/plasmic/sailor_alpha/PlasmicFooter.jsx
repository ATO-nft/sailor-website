// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6tP4H2YXq73abyMEePhpsf
// Component: w_pxODdXjgL
import * as React from "react";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants as useScreenVariantsu0VQjvxy5SkDm } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: U0vQjvxy5SKDm/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sailor_alpha.module.css"; // plasmic-import: 6tP4H2YXq73abyMEePhpsf/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: w_pxODdXjgL/css
import Group7Icon from "./icons/PlasmicIcon__Group7"; // plasmic-import: YuTey3_gZl/icon
import Vector15Icon from "./icons/PlasmicIcon__Vector15"; // plasmic-import: Bj4GhDg1_t/icon
import Vector16Icon from "./icons/PlasmicIcon__Vector16"; // plasmic-import: nPl2qKjNR7/icon
import Group11Icon from "./icons/PlasmicIcon__Group11"; // plasmic-import: Hg_aDXW0Z0/icon
import Group12Icon from "./icons/PlasmicIcon__Group12"; // plasmic-import: OhSD0j47BP/icon
import Group10Icon from "./icons/PlasmicIcon__Group10"; // plasmic-import: -moBxgIQ_t/icon
import Vector20Icon from "./icons/PlasmicIcon__Vector20"; // plasmic-import: HM7DpFmCWr/icon
import Vector21Icon from "./icons/PlasmicIcon__Vector21"; // plasmic-import: gdyJc--PQ1/icon
import Vector22Icon from "./icons/PlasmicIcon__Vector22"; // plasmic-import: 7ipi9rOB7v/icon
import Vector23Icon from "./icons/PlasmicIcon__Vector23"; // plasmic-import: 6HeqwqHBbf/icon
import Group9Icon from "./icons/PlasmicIcon__Group9"; // plasmic-import: N3VAOrdctd/icon
import Vector19Icon from "./icons/PlasmicIcon__Vector19"; // plasmic-import: 0Iwytd0xfd/icon
import Group8Icon from "./icons/PlasmicIcon__Group8"; // plasmic-import: e7_Kl1BE5o/icon
import Vector17Icon from "./icons/PlasmicIcon__Vector17"; // plasmic-import: zsbxYr-xMd/icon
import Vector18Icon from "./icons/PlasmicIcon__Vector18"; // plasmic-import: CctCRY5INO/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

export const defaultFooter__Args = {};

function PlasmicFooter__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultFooter__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsu0VQjvxy5SkDm()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      {(hasVariant(globalVariants, "screen", "mobileOnly") ? true : true) ? (
        <div
          data-plasmic-name={"socialContainer"}
          data-plasmic-override={overrides.socialContainer}
          className={classNames(projectcss.all, sty.socialContainer)}
        >
          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.link__s9Vud
            )}
            href={"https://twitter.com/TheSailorNFT"}
            target={"_blank"}
          >
            <div
              data-plasmic-name={"twitter"}
              data-plasmic-override={overrides.twitter}
              className={classNames(projectcss.all, sty.twitter)}
            >
              <div
                data-plasmic-name={"frame"}
                data-plasmic-override={overrides.frame}
                className={classNames(projectcss.all, sty.frame)}
              >
                <div
                  data-plasmic-name={"group"}
                  data-plasmic-override={overrides.group}
                  className={classNames(projectcss.all, sty.group)}
                >
                  <div
                    data-plasmic-name={"objects"}
                    data-plasmic-override={overrides.objects}
                    className={classNames(projectcss.all, sty.objects)}
                  >
                    <Group7Icon
                      className={classNames(projectcss.all, sty.svg__z4H3Y)}
                      role={"img"}
                    />

                    <Vector15Icon
                      className={classNames(projectcss.all, sty.svg__zXwM)}
                      role={"img"}
                    />

                    <Vector16Icon
                      className={classNames(projectcss.all, sty.svg__cd7Sy)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>
            </div>
          </a>

          {true ? (
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__kNaSm
              )}
              href={"https://etherscan.io/"}
              target={"_blank"}
            >
              <div
                data-plasmic-name={"etherscan"}
                data-plasmic-override={overrides.etherscan}
                className={classNames(projectcss.all, sty.etherscan)}
              >
                <div
                  data-plasmic-name={"group5"}
                  data-plasmic-override={overrides.group5}
                  className={classNames(projectcss.all, sty.group5)}
                >
                  <div
                    data-plasmic-name={"objects5"}
                    data-plasmic-override={overrides.objects5}
                    className={classNames(projectcss.all, sty.objects5)}
                  >
                    <Group11Icon
                      className={classNames(projectcss.all, sty.svg__gtn7R)}
                      role={"img"}
                    />

                    <div
                      data-plasmic-name={"circle"}
                      data-plasmic-override={overrides.circle}
                      className={classNames(projectcss.all, sty.circle)}
                    >
                      <Group12Icon
                        className={classNames(projectcss.all, sty.svg__xU3Kf)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </a>
          ) : null}

          <a
            className={classNames(
              projectcss.all,
              projectcss.a,
              sty.link__njY3M
            )}
            href={"https://www.instagram.com/thesailornft/"}
            target={"_blank"}
          >
            <div
              data-plasmic-name={"instagram"}
              data-plasmic-override={overrides.instagram}
              className={classNames(projectcss.all, sty.instagram)}
            >
              <div
                data-plasmic-name={"instagram2"}
                data-plasmic-override={overrides.instagram2}
                className={classNames(projectcss.all, sty.instagram2)}
              >
                <div
                  data-plasmic-name={"objects4"}
                  data-plasmic-override={overrides.objects4}
                  className={classNames(projectcss.all, sty.objects4)}
                >
                  <Group10Icon
                    className={classNames(projectcss.all, sty.svg__yFSiz)}
                    role={"img"}
                  />

                  <Vector20Icon
                    className={classNames(projectcss.all, sty.svg__bu3Ze)}
                    role={"img"}
                  />

                  <Vector21Icon
                    className={classNames(projectcss.all, sty.svg__obAsI)}
                    role={"img"}
                  />

                  <Vector22Icon
                    className={classNames(projectcss.all, sty.svg__ythH9)}
                    role={"img"}
                  />

                  <Vector23Icon
                    className={classNames(projectcss.all, sty.svg__tiaw1)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
          </a>

          {true ? (
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link___9R8P
              )}
              href={"https://discord.com/"}
              target={"_blank"}
            >
              <div
                data-plasmic-name={"discord"}
                data-plasmic-override={overrides.discord}
                className={classNames(projectcss.all, sty.discord)}
              >
                <div
                  data-plasmic-name={"discord2"}
                  data-plasmic-override={overrides.discord2}
                  className={classNames(projectcss.all, sty.discord2)}
                >
                  <div
                    data-plasmic-name={"objects3"}
                    data-plasmic-override={overrides.objects3}
                    className={classNames(projectcss.all, sty.objects3)}
                  >
                    <Group9Icon
                      className={classNames(projectcss.all, sty.svg__jeTgp)}
                      role={"img"}
                    />

                    <Vector19Icon
                      className={classNames(projectcss.all, sty.svg__jQXc9)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>
            </a>
          ) : null}
          {true ? (
            <a
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__kvAk4
              )}
              href={"https://opensea.io/"}
              target={"_blank"}
            >
              <div
                data-plasmic-name={"opensea"}
                data-plasmic-override={overrides.opensea}
                className={classNames(projectcss.all, sty.opensea)}
              >
                <div
                  data-plasmic-name={"group2"}
                  data-plasmic-override={overrides.group2}
                  className={classNames(projectcss.all, sty.group2)}
                >
                  <div
                    data-plasmic-name={"objects2"}
                    data-plasmic-override={overrides.objects2}
                    className={classNames(projectcss.all, sty.objects2)}
                  >
                    <Group8Icon
                      className={classNames(projectcss.all, sty.svg__sccHk)}
                      role={"img"}
                    />

                    <Vector17Icon
                      className={classNames(projectcss.all, sty.svg__zj9R3)}
                      role={"img"}
                    />

                    <Vector18Icon
                      className={classNames(projectcss.all, sty.svg__jnLlQ)}
                      role={"img"}
                    />
                  </div>
                </div>
              </div>
            </a>
          ) : null}
        </div>
      ) : null}
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "socialContainer",
    "twitter",
    "frame",
    "group",
    "objects",
    "etherscan",
    "group5",
    "objects5",
    "circle",
    "instagram",
    "instagram2",
    "objects4",
    "discord",
    "discord2",
    "objects3",
    "opensea",
    "group2",
    "objects2"
  ],

  socialContainer: [
    "socialContainer",
    "twitter",
    "frame",
    "group",
    "objects",
    "etherscan",
    "group5",
    "objects5",
    "circle",
    "instagram",
    "instagram2",
    "objects4",
    "discord",
    "discord2",
    "objects3",
    "opensea",
    "group2",
    "objects2"
  ],

  twitter: ["twitter", "frame", "group", "objects"],
  frame: ["frame", "group", "objects"],
  group: ["group", "objects"],
  objects: ["objects"],
  etherscan: ["etherscan", "group5", "objects5", "circle"],
  group5: ["group5", "objects5", "circle"],
  objects5: ["objects5", "circle"],
  circle: ["circle"],
  instagram: ["instagram", "instagram2", "objects4"],
  instagram2: ["instagram2", "objects4"],
  objects4: ["objects4"],
  discord: ["discord", "discord2", "objects3"],
  discord2: ["discord2", "objects3"],
  objects3: ["objects3"],
  opensea: ["opensea", "group2", "objects2"],
  group2: ["group2", "objects2"],
  objects2: ["objects2"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    socialContainer: makeNodeComponent("socialContainer"),
    twitter: makeNodeComponent("twitter"),
    frame: makeNodeComponent("frame"),
    group: makeNodeComponent("group"),
    objects: makeNodeComponent("objects"),
    etherscan: makeNodeComponent("etherscan"),
    group5: makeNodeComponent("group5"),
    objects5: makeNodeComponent("objects5"),
    circle: makeNodeComponent("circle"),
    instagram: makeNodeComponent("instagram"),
    instagram2: makeNodeComponent("instagram2"),
    objects4: makeNodeComponent("objects4"),
    discord: makeNodeComponent("discord"),
    discord2: makeNodeComponent("discord2"),
    objects3: makeNodeComponent("objects3"),
    opensea: makeNodeComponent("opensea"),
    group2: makeNodeComponent("group2"),
    objects2: makeNodeComponent("objects2"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
