// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6tP4H2YXq73abyMEePhpsf
// Component: YFLbf8Sj1U
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import MyHeader from "../../MyHeader"; // plasmic-import: sfUx3YtoOJF/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sailor_alpha.module.css"; // plasmic-import: 6tP4H2YXq73abyMEePhpsf/projectcss
import sty from "./PlasmicArtwork.module.css"; // plasmic-import: YFLbf8Sj1U/css

export const PlasmicArtwork__VariantProps = new Array();

export const PlasmicArtwork__ArgProps = new Array();

function PlasmicArtwork__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <MyHeader
            data-plasmic-name={"myHeader"}
            data-plasmic-override={overrides.myHeader}
            className={classNames("__wab_instance", sty.myHeader)}
          />

          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__ePoLo)}>
                <div
                  data-plasmic-name={"titre1"}
                  data-plasmic-override={overrides.titre1}
                  className={classNames(projectcss.all, sty.titre1)}
                />

                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text
                  )}
                >
                  {
                    "“2020. Le monde s’est arrêté en sombrant dans une dictature sanitaire mondiale. Sailor est un marin solitaire parcourant le monde entier. Il est \nà la recherche de coins sauvages \net tranquilles où il pourra s’évader \ndans les méandres de son imagination \net s’abandonner à la poésie. \nAlors qu’il fuit “Babylone”, le coeur \nde l’humanité 2.0, il collectionne \nles petits boulots afin d’économiser \net de se procurer un rafiot digne \nde concourir à sa grande échappée. \nMais Dieu seul sait ce que son \nvoyage lui réserve...”"
                  }
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__kjkxp)}>
                <div
                  data-plasmic-name={"rectangle47"}
                  data-plasmic-override={overrides.rectangle47}
                  className={classNames(projectcss.all, sty.rectangle47)}
                />
              </div>

              <div className={classNames(projectcss.all, sty.column__aBarR)}>
                <div
                  data-plasmic-name={"rectangle48"}
                  data-plasmic-override={overrides.rectangle48}
                  className={classNames(projectcss.all, sty.rectangle48)}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "myHeader",
    "freeBox",
    "columns",
    "titre1",
    "text",
    "rectangle47",
    "rectangle48"
  ],

  myHeader: ["myHeader"],
  freeBox: [
    "freeBox",
    "columns",
    "titre1",
    "text",
    "rectangle47",
    "rectangle48"
  ],

  columns: ["columns", "titre1", "text", "rectangle47", "rectangle48"],
  titre1: ["titre1"],
  text: ["text"],
  rectangle47: ["rectangle47"],
  rectangle48: ["rectangle48"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicArtwork__ArgProps,
      internalVariantPropNames: PlasmicArtwork__VariantProps
    });

    return PlasmicArtwork__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicArtwork";
  } else {
    func.displayName = `PlasmicArtwork.${nodeName}`;
  }
  return func;
}

export const PlasmicArtwork = Object.assign(
  // Top-level PlasmicArtwork renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    myHeader: makeNodeComponent("myHeader"),
    freeBox: makeNodeComponent("freeBox"),
    columns: makeNodeComponent("columns"),
    titre1: makeNodeComponent("titre1"),
    text: makeNodeComponent("text"),
    rectangle47: makeNodeComponent("rectangle47"),
    rectangle48: makeNodeComponent("rectangle48"),
    // Metadata about props expected for PlasmicArtwork
    internalVariantProps: PlasmicArtwork__VariantProps,
    internalArgProps: PlasmicArtwork__ArgProps
  }
);

export default PlasmicArtwork;
/* prettier-ignore-end */
