// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6tP4H2YXq73abyMEePhpsf
// Component: YFLbf8Sj1U
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 9HJOL_ndHV/component
import Slider from "react-slick"; // plasmic-import: HOQUyOpClJ/codeComponent
import { useScreenVariants as useScreenVariantsu0VQjvxy5SkDm } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: U0vQjvxy5SKDm/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sailor_alpha.module.css"; // plasmic-import: 6tP4H2YXq73abyMEePhpsf/projectcss
import sty from "./PlasmicArtwork.module.css"; // plasmic-import: YFLbf8Sj1U/css
import titre1FFjsUvpvre from "./images/titre1.png"; // plasmic-import: fFJSUvpvre/picture
import titre1PngHD0J16Vls from "./images/titre1Png.png"; // plasmic-import: hD0j16vls/picture
import nft13LrJqBEcrbv from "./images/nft1.png"; // plasmic-import: 3LrJqBEcrbv/picture
import nft2CaImCIbh7OT from "./images/nft2.png"; // plasmic-import: CAImCIbh7oT/picture
import nft3I4UYce1FlU1 from "./images/nft3.png"; // plasmic-import: i4UYce1flU1/picture
import nft4XHwUai6Q7C from "./images/nft4.png"; // plasmic-import: -xHwUAI6q7c/picture
import nft5ZJyUFs8I0X from "./images/nft5.png"; // plasmic-import: z-jyUFs8i0x/picture
import nft66SvKTzPzKlc from "./images/nft6.png"; // plasmic-import: 6SvKTzPzKLC/picture
import nft7AovqndXcK from "./images/nft7.png"; // plasmic-import: aovqnd_XC_K/picture

export const PlasmicArtwork__VariantProps = new Array();

export const PlasmicArtwork__ArgProps = new Array();

export const defaultArtwork__Args = {};

function PlasmicArtwork__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultArtwork__Args, props.args);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsu0VQjvxy5SkDm()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__ky2WG)}>
            <div className={classNames(projectcss.all, sty.freeBox__jh9Gs)}>
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__i6Pqi)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "80%"
                    : "33%"
                }
                loading={"lazy"}
                src={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? {
                        src: titre1PngHD0J16Vls,
                        fullWidth: 431,
                        fullHeight: 294,
                        aspectRatio: undefined
                      }
                    : {
                        src: titre1FFjsUvpvre,
                        fullWidth: 1181,
                        fullHeight: 1181,
                        aspectRatio: undefined
                      }
                }
              />

              <div
                data-plasmic-name={"text"}
                data-plasmic-override={overrides.text}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text
                )}
              >
                {
                  "“2020. Le monde s’est arrêté en sombrant dans une dictature sanitaire mondiale. Sailor est un marin solitaire parcourant le monde entier. Il est à la recherche de coins sauvages et tranquilles où il pourra s’évader dans les méandres de son imagination et s’abandonner à la poésie. Alors qu’il fuit “Babylone”, le coeur de l’humanité 2.0, il collectionne les petits boulots afin d’économiser et de se procurer un rafiot digne de concourir à sa grande échappée. Mais Dieu seul sait ce que son voyage lui réserve...”"
                }
              </div>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__htF31)}>
              <Slider
                data-plasmic-name={"slider"}
                data-plasmic-override={overrides.slider}
                autoplay={true}
                className={classNames("__wab_instance", sty.slider)}
                dots={false}
                slidesPerRow={
                  hasVariant(globalVariants, "screen", "mobileOnly") ? 1 : 2
                }
                variableWidth={false}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kM5KN)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft13LrJqBEcrbv,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___3Orf6)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft2CaImCIbh7OT,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__qpgxe)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft3I4UYce1FlU1,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sU6F)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft4XHwUai6Q7C,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ogvQv)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft5ZJyUFs8I0X,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___0KYux)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft66SvKTzPzKlc,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ab1)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "50%"
                  }
                  loading={"lazy"}
                  src={{
                    src: nft7AovqndXcK,
                    fullWidth: 1181,
                    fullHeight: 1181,
                    aspectRatio: undefined
                  }}
                />
              </Slider>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "header", "text", "slider"],
  header: ["header"],
  text: ["text"],
  slider: ["slider"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicArtwork__ArgProps,
      internalVariantPropNames: PlasmicArtwork__VariantProps
    });

    return PlasmicArtwork__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicArtwork";
  } else {
    func.displayName = `PlasmicArtwork.${nodeName}`;
  }
  return func;
}

export const PlasmicArtwork = Object.assign(
  // Top-level PlasmicArtwork renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    text: makeNodeComponent("text"),
    slider: makeNodeComponent("slider"),
    // Metadata about props expected for PlasmicArtwork
    internalVariantProps: PlasmicArtwork__VariantProps,
    internalArgProps: PlasmicArtwork__ArgProps
  }
);

export default PlasmicArtwork;
/* prettier-ignore-end */
