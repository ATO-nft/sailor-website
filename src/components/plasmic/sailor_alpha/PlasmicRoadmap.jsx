// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6tP4H2YXq73abyMEePhpsf
// Component: c-0KVxh9hq
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 9HJOL_ndHV/component
import { useScreenVariants as useScreenVariantsu0VQjvxy5SkDm } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: U0vQjvxy5SKDm/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sailor_alpha.module.css"; // plasmic-import: 6tP4H2YXq73abyMEePhpsf/projectcss
import sty from "./PlasmicRoadmap.module.css"; // plasmic-import: c-0KVxh9hq/css
import case23PngU5BGd5Wtc from "./images/case23Png.png"; // plasmic-import: U5bGd5Wtc/picture

export const PlasmicRoadmap__VariantProps = new Array();

export const PlasmicRoadmap__ArgProps = new Array();

export const defaultRoadmap__Args = {};

function PlasmicRoadmap__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultRoadmap__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsu0VQjvxy5SkDm()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
            light={true}
          />

          {(
            hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
          ) ? (
            <div
              data-plasmic-name={"roadmapDesktop"}
              data-plasmic-override={overrides.roadmapDesktop}
              className={classNames(projectcss.all, sty.roadmapDesktop)}
            >
              <div
                data-plasmic-name={"case20"}
                data-plasmic-override={overrides.case20}
                className={classNames(projectcss.all, sty.case20)}
              >
                <div
                  data-plasmic-name={"figmaPaste"}
                  data-plasmic-override={overrides.figmaPaste}
                  className={classNames(projectcss.all, sty.figmaPaste)}
                >
                  <div
                    data-plasmic-name={
                      "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent"
                    }
                    data-plasmic-override={
                      overrides.phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Q2. Cast off the mooring"}
                      </span>
                      <React.Fragment>
                        {
                          '\nEnergizing community\nCreative live hosted by Federici\nCollection release \n& reveal event party\nStarting the preparation \nof operation "Babylone"'
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div
                  data-plasmic-name={"text"}
                  data-plasmic-override={overrides.text}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text
                  )}
                >
                  {
                    'Q3. Course to port\n\nEmpowering and mentoring artist from community\nFederici\'s creative live \nand meet\nNFT Holders Artworks : \nOwn your masterpiece\nOperation "Babylone" launch\nCreation contest: the new Sailor'
                  }
                </div>
              </div>

              <div
                data-plasmic-name={"case22"}
                data-plasmic-override={overrides.case22}
                className={classNames(projectcss.all, sty.case22)}
              />

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"case21"}
                  data-plasmic-override={overrides.case21}
                  className={classNames(projectcss.all, sty.case21)}
                />
              ) : null}

              <div
                data-plasmic-name={
                  "phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2"
                }
                data-plasmic-override={
                  overrides.phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2
                }
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2
                )}
              >
                {
                  "2023 . Our journey carry on\n\nDAO and release of the next part of Sailor's story\nRelease of Sailor BD Tome 2\nSecond collection"
                }
              </div>

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicImg
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: case23PngU5BGd5Wtc,
                    fullWidth: 617,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                />
              ) : null}

              <div
                data-plasmic-name={"case25"}
                data-plasmic-override={overrides.case25}
                className={classNames(projectcss.all, sty.case25)}
              />

              <div
                data-plasmic-name={"case24"}
                data-plasmic-override={overrides.case24}
                className={classNames(projectcss.all, sty.case24)}
              />

              <div
                data-plasmic-name={
                  "phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore"
                }
                data-plasmic-override={
                  overrides.phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore
                }
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore
                )}
              >
                {
                  'Q4 . Throw the ink\n\nOperation "Hut" launch\nPossibility to claim \nthe Sailor comic\nFirst vote requirement for Sailor tome 2\nOperation "Bbabylone" exhibition'
                }
              </div>
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "roadmapDesktop",
    "case20",
    "figmaPaste",
    "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent",
    "text",
    "case22",
    "case21",
    "phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2",
    "img",
    "case25",
    "case24",
    "phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore"
  ],

  header: ["header"],
  roadmapDesktop: [
    "roadmapDesktop",
    "case20",
    "figmaPaste",
    "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent",
    "text",
    "case22",
    "case21",
    "phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2",
    "img",
    "case25",
    "case24",
    "phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore"
  ],

  case20: [
    "case20",
    "figmaPaste",
    "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent",
    "text"
  ],

  figmaPaste: [
    "figmaPaste",
    "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent"
  ],

  phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent:
    [
      "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent"
    ],

  text: ["text"],
  case22: ["case22"],
  case21: ["case21"],
  phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2:
    [
      "phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2"
    ],

  img: ["img"],
  case25: ["case25"],
  case24: ["case24"],
  phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore:
    [
      "phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore"
    ]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicRoadmap__ArgProps,
      internalVariantPropNames: PlasmicRoadmap__VariantProps
    });

    return PlasmicRoadmap__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRoadmap";
  } else {
    func.displayName = `PlasmicRoadmap.${nodeName}`;
  }
  return func;
}

export const PlasmicRoadmap = Object.assign(
  // Top-level PlasmicRoadmap renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    roadmapDesktop: makeNodeComponent("roadmapDesktop"),
    case20: makeNodeComponent("case20"),
    figmaPaste: makeNodeComponent("figmaPaste"),
    phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent:
      makeNodeComponent(
        "phase1TheFirstApparitionOfTheSailorHappenedInTheStreetsOfParisOutOfRaphaelFedericisMindAbandonedWallClosedShopRuinedBuildingTheSailorHasNoLimitInvadingTheCityTheCountryAndAll5Continent"
      ),

    text: makeNodeComponent("text"),
    case22: makeNodeComponent("case22"),
    case21: makeNodeComponent("case21"),
    phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2:
      makeNodeComponent(
        "phase4LaunchOfTheCollectionRevealOfTheLegendaryLaunchOfARaritySniperHoldersOfTheNftWillBePrivateEventForHoldersInParisPurchaseOfAnIslandToGiveawayToTheCommunityPurchaseOfABoatToGiveawayToTheCommunityStartOfTheSailorComics2"
      ),

    img: makeNodeComponent("img"),
    case25: makeNodeComponent("case25"),
    case24: makeNodeComponent("case24"),
    phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore:
      makeNodeComponent(
        "phase3TheSailorIsFreeAndHasNoFrontierThatsWhyRaphaelFedericiProposeToBeCoProducterOfTheSailorsComicsAnimatedSeriesByOwningASailorNftLaunchOfTheSocialMediaAndPrivateDiscordLivePaintingOfRaphaelFedericiMeditationCoursesAndMore"
      ),

    // Metadata about props expected for PlasmicRoadmap
    internalVariantProps: PlasmicRoadmap__VariantProps,
    internalArgProps: PlasmicRoadmap__ArgProps
  }
);

export default PlasmicRoadmap;
/* prettier-ignore-end */
