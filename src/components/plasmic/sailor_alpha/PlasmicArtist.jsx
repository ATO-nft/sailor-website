// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6tP4H2YXq73abyMEePhpsf
// Component: 4T390JcXEt
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 9HJOL_ndHV/component
import { useScreenVariants as useScreenVariantsu0VQjvxy5SkDm } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: U0vQjvxy5SKDm/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_sailor_alpha.module.css"; // plasmic-import: 6tP4H2YXq73abyMEePhpsf/projectcss
import sty from "./PlasmicArtist.module.css"; // plasmic-import: 4T390JcXEt/css
import titre1PngHD0J16Vls from "./images/titre1Png.png"; // plasmic-import: hD0j16vls/picture
import nft13LrJqBEcrbv from "./images/nft1.png"; // plasmic-import: 3LrJqBEcrbv/picture
import nft2CaImCIbh7OT from "./images/nft2.png"; // plasmic-import: CAImCIbh7oT/picture
import nft3I4UYce1FlU1 from "./images/nft3.png"; // plasmic-import: i4UYce1flU1/picture
import nft4XHwUai6Q7C from "./images/nft4.png"; // plasmic-import: -xHwUAI6q7c/picture

export const PlasmicArtist__VariantProps = new Array();

export const PlasmicArtist__ArgProps = new Array();

export const defaultArtist__Args = {};

function PlasmicArtist__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultArtist__Args, props.args);
  const $props = args;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsu0VQjvxy5SkDm()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__hsHBj)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"260px"}
              loading={"lazy"}
              src={{
                src: titre1PngHD0J16Vls,
                fullWidth: 431,
                fullHeight: 294,
                aspectRatio: undefined
              }}
            />
          </div>

          {true ? (
            <div
              data-plasmic-name={"argumentSection"}
              data-plasmic-override={overrides.argumentSection}
              className={classNames(projectcss.all, sty.argumentSection)}
            >
              <div
                data-plasmic-name={"childhood"}
                data-plasmic-override={overrides.childhood}
                className={classNames(projectcss.all, sty.childhood)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__dDCi9)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__uiT5
                      )}
                    >
                      {"Childhood \n& Influence"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tIhBq
                      )}
                    >
                      {
                        'My childhood was a happy childhood. When I look back at it I really see a clich√© of an 80\'s childhood like "Stranger Things", a pure product of generation Y. I grew up as a young person of a mixed race between the South of France and Corsica. My mother brought me the Corsican culture, taking me to the island of beauty at a very young age. My father never took the step of taking me to Cameroon. I have always felt a painful reluctance \nto go back there. So I never knew the African part of my mixed race. The funny thing is that I never suffered from the racism that is often self-generated by an inferiority complex. I grew up as a European child, far from my African roots, which I discovered much later \nas an adult. \n \nI grew up with several obsessions. The first was drawing. My mother often painted \nat home, and would automatically draw beautiful portraits of women when she was \non the phone. My father, during our time together, would often draw with me. I was able to watch him for hours and learn from him during my childhood. And when my friends at school found out that my father drew so well, my level of fame increased dramatically. I think that was the primary source of motivation that launched me \non this quest for the line. I now realize how important it is to learn to draw early. \nIt\'s such a complicated practice to master that if you didn\'t start when you were little, it\'s hard to accumulate hours of practice as an adult. I was lucky enough not to count \nmy hours and to travel through my imagination all my childhood. \n \nAs a kid, I also discovered the world of cinema that we devoured without moderation at home. Besides, I was much more into movies than cartoons... " Honey, I shrunk the kids ", " Willow ", " Mom I missed the plane ", " Bethoveen ", " The Goonies ", " Beattlejuice ", \n" Jurassic Park ", " Hook ", " Turtles ", " Back to the future ", " E.T " etc. I was rocked by \nthe Hollywood movies of the 80s and 90s, which also got me hooked on the soundtrack \nof movies that I still listen to regularly today during my creative phases. \nI also grew up with the video game references that were flourishing. Nintendo with "Ninja Turtle", "Mario Bros" or "Double Dragon", the Mega-drive, the Gamegear, the Gameboy, \nthe Super Nintendo, the Playstation, etc... I was addicted and amazed. My imagination flourished and turned my comic book scripts upside down. Comic books flourished on \nmy parents\' shelves, serving as my first literature... " Gaston Lagaffe ", " Asterix ", " Tintin ", \n" Lucky Luke ", " Boule et Bill ", but especially the comics of Mr. Marcel Gotlib.  I have always been very impressed by the ability of this artist to draw expressions. He always impressed me a lot. I really learned to draw proportions thanks to him, and quite a lot of "Dragon Ball Z" I must admit. Moreover, I was obsessed with only one type of toy: the ones that were perfectly articulated and would allow me to imitate very realistic movements and aerial acrobatics (in the twists at least). This is what helped me to understand the movement and the apprehension of the human body in space.'
                      }
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <div
                    data-plasmic-name={"illustration"}
                    data-plasmic-override={overrides.illustration}
                    className={classNames(projectcss.all, sty.illustration)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__uWzku)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: nft13LrJqBEcrbv,
                        fullWidth: 1181,
                        fullHeight: 1181,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"argumentSection2"}
              data-plasmic-override={overrides.argumentSection2}
              className={classNames(projectcss.all, sty.argumentSection2)}
            >
              <div
                data-plasmic-name={"childhood2"}
                data-plasmic-override={overrides.childhood2}
                className={classNames(projectcss.all, sty.childhood2)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"text2"}
                    data-plasmic-override={overrides.text2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text2)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__bcF5
                      )}
                    >
                      {"Art \nDiscovering"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kLvy1
                      )}
                    >
                      {
                        "I used to spend a lot of time creating fictional characters and scenarios worthy of the greatest Hollywood movies. I could spend hours and hours researching references. Before each attempt at \na comic book script, I would start by drawing each \nof the protagonists, and describing their characters. \nIt was such a time-consuming process that I often ran out of steam after the fifth or sixth page of comics, constantly starting new scripts and never finishing \na single story. \nFor a long time, I saw my abortions as a curse... \nI came to the conclusion that my imagination was \nso fertile, that I would always be bored following \na single scenario, making me perfectly incapable \nof ever finishing my comic book. In fact, it will \nbe in 2021 that I will complete my first comic book, at the age of 34.\n\n"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ejdo0
                      )}
                    >
                      {
                        "I perfected my drawing style during long hours of boredom in class. I was creating stories, literally escaping. I was often surprised at my ability to let 3 hours of the class go by without realizing it, I was even frustrated sometimes that it didn't last longer... my report card on the other hand suffered concretely. It was in 2001 that my life changed when \nI learned, independently of the guidance counselors, that applied arts apprenticeship programs existed, starting in the second year of high school. When I learned that, \nI was already in second grade but in another course so boring that I felt for the first time \nthe notion of a nervous breakdown. When I learned this, I showed the most violent determination that I have ever shown to this day. I had to get out of there and into that school, it was a matter of life and death.  I asked to repeat a year and I did everything \nI could to get in. Unfortunately, the registration was already closed. But I insisted so much and showed my thirst to enter that I got my place by being the first on the waiting list. \nIt changed my life. I was for the first time part of the best students, my enthusiasm carrying me on many sleepless nights to draw, create, and accomplish myself. During these 3 years of school, I was able to refine my style and approach it from a professional point of view. \nI was looking for excellence in my research, approaching all styles of techniques. It is in art classes that I was able to reconnect with the pleasure of my early childhood which was acrylic painting. Later on, while studying object design, I tried sculpture, which fascinated me as much as rough drawing.\n\n"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bKrOw
                      )}
                    >
                      {""}
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <div
                    data-plasmic-name={"illustration2"}
                    data-plasmic-override={overrides.illustration2}
                    className={classNames(projectcss.all, sty.illustration2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kx027)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: nft2CaImCIbh7OT,
                        fullWidth: 1181,
                        fullHeight: 1181,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"argumentSection3"}
              data-plasmic-override={overrides.argumentSection3}
              className={classNames(projectcss.all, sty.argumentSection3)}
            >
              <div
                data-plasmic-name={"childhood3"}
                data-plasmic-override={overrides.childhood3}
                className={classNames(projectcss.all, sty.childhood3)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"text3"}
                    data-plasmic-override={overrides.text3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text3)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__zDiG1
                      )}
                    >
                      {"Web 3"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wyvfg
                      )}
                    >
                      {
                        'I perfected my drawing style during long hours of boredom in class. I was creating stories, literally escaping. I was often surprised at my ability to let 3 hours of the class go by without realizing it, I was even frustrated sometimes that it didn\'t last longer... my report card on the other hand suffered concretely. It was in 2001 that my life changed when \nI learned, independently of the guidance counselors, that applied arts apprenticeship programs existed, starting in the second year of high school. When I learned that, \nI was already in second grade but in another course so boring that I felt for the first time \nthe notion of a nervous breakdown. When I learned this, I showed the most violent determination that I have ever shown to this day. I had to get out of there and into that school, it was a matter of life and death.  I asked to repeat a year and I did everything \nI could to get in. Unfortunately, the registration was already closed. But I insisted so much and showed my thirst to enter that I got my place by being the first on the waiting list. \nIt changed my life. I was for the first time part of the best students, my enthusiasm carrying me on many sleepless nights to draw, create, and accomplish myself. During these 3 years of school, I was able to refine my style and approach it from a professional point of view. \nI was looking for excellence in my research, approaching all styles of techniques. It is in art classes that I was able to reconnect with the pleasure of my early childhood which was acrylic painting. Later on, while studying object design, I tried sculpture, which fascinated me as much as rough drawing.\n\nI compelled the machine to create as I would have done before my mind could even imagine it. This is my digitized painting collection. I have digitally transcribed my brushstrokes so that \nI can make a "handmade" NFT collection. I used artificial intelligence to record an imprint of my soul and emotions when I paint. So, by digitizing enough information through the machine\'s algorithm that assists me, I get a series of thousands of combinations that could have come straight out \nof my mind. \nMy reflection was to keep a link with reality, the touch, and the movement that I normally \napply to my creations, but this time, by transposing them into this new "de-meta-realized" world. \n\nI compelled the machine to create as I would have done before my mind could even imagine it. This is my digitized painting collection. I have digitally transcribed my brushstrokes so that \nI can make a "handmade" NFT collection. I used artificial intelligence to record an imprint of my soul and emotions when I paint. So, by digitizing enough information through the machine\'s algorithm that assists me, I get a series of thousands of combinations that could have come straight out \nof my mind. \nMy reflection was to keep a link with reality, the touch, and the movement that I normally \napply to my creations, but this time, by transposing them into this new "de-meta-realized" world. \n'
                      }
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <div
                    data-plasmic-name={"illustration3"}
                    data-plasmic-override={overrides.illustration3}
                    className={classNames(projectcss.all, sty.illustration3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__c30K1)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: nft3I4UYce1FlU1,
                        fullWidth: 1181,
                        fullHeight: 1181,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"argumentSection4"}
              data-plasmic-override={overrides.argumentSection4}
              className={classNames(projectcss.all, sty.argumentSection4)}
            >
              <div
                data-plasmic-name={"childhood4"}
                data-plasmic-override={overrides.childhood4}
                className={classNames(projectcss.all, sty.childhood4)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"text4"}
                    data-plasmic-override={overrides.text4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text4)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__veCfh
                      )}
                    >
                      {"Art\nDeveloppement"}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ltO5L
                      )}
                    >
                      {
                        "After my studies, I was able to work as a designer, stylist, and rough man, then as an art director in advertising. It is only after having exhausted my resources in the commercial world that I was able to return to painting. Indeed, after entering the professional world, \nI followed, as many do, the race for money, emptying myself little by little of my first dreams... After my second burnout, and redundancy, I had to spend a year alone in my small Parisian studio, alone with myself. I then started to draw for myself. Then to paint, then to do whatever I felt like doing creatively. \n \nWorking in advertising, I did a lot of sourcing, observing what many of my future competitors were doing. This gave me a certain philosophy of what would work for me \nand make me stand out. \nI needed a gimmick, a recognizable sign, a style. The lines and the wooden ribs were born, and then very quickly, the character of the sailor arrived, representing me perfectly. I am the sailor, the great dreamer, the loner, and the ambitious. With the dazzling success \nof my first collection which was sold in its entirety on the Champs-Elysees in 2013, I was launched into a frantic race with myself, a race to perfect my art and to express a still unexplored inner emotion. I had become a painter, and I finally had plenty of time \nto find myself.  \n \nIt was only a few years later that I encountered the Parisian street art scene. \nIn 2015 I made my first collages and then my first frescoes, roughly representing what I was already doing in the studio, but on surfaces 100 to 1000 times bigger. \nI was hooked, street art was part of me and Instagram became an important tool \nfor lifestyle photo capture, my art in the street brought me under the spotlight very quickly, allowing me to perfect my art around the world. Thus, from a trip to trip, feeding myself with many adventures and encounters, my art became more mature, more colorful, more international, and more universal, defending multiple humanity, \nunder the likeness of one God.\n\n"
                      }
                    </div>
                  </p.Stack>
                ) : null}
                {true ? (
                  <div
                    data-plasmic-name={"illustration4"}
                    data-plasmic-override={overrides.illustration4}
                    className={classNames(projectcss.all, sty.illustration4)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__t6Qsj)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: nft4XHwUai6Q7C,
                        fullWidth: 1181,
                        fullHeight: 1181,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
            </div>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "heroSection",
    "argumentSection",
    "childhood",
    "illustration",
    "argumentSection2",
    "childhood2",
    "text2",
    "illustration2",
    "argumentSection3",
    "childhood3",
    "text3",
    "illustration3",
    "argumentSection4",
    "childhood4",
    "text4",
    "illustration4"
  ],

  header: ["header"],
  heroSection: ["heroSection"],
  argumentSection: ["argumentSection", "childhood", "illustration"],
  childhood: ["childhood", "illustration"],
  illustration: ["illustration"],
  argumentSection2: [
    "argumentSection2",
    "childhood2",
    "text2",
    "illustration2"
  ],

  childhood2: ["childhood2", "text2", "illustration2"],
  text2: ["text2"],
  illustration2: ["illustration2"],
  argumentSection3: [
    "argumentSection3",
    "childhood3",
    "text3",
    "illustration3"
  ],

  childhood3: ["childhood3", "text3", "illustration3"],
  text3: ["text3"],
  illustration3: ["illustration3"],
  argumentSection4: [
    "argumentSection4",
    "childhood4",
    "text4",
    "illustration4"
  ],

  childhood4: ["childhood4", "text4", "illustration4"],
  text4: ["text4"],
  illustration4: ["illustration4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicArtist__ArgProps,
      internalVariantPropNames: PlasmicArtist__VariantProps
    });

    return PlasmicArtist__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicArtist";
  } else {
    func.displayName = `PlasmicArtist.${nodeName}`;
  }
  return func;
}

export const PlasmicArtist = Object.assign(
  // Top-level PlasmicArtist renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    heroSection: makeNodeComponent("heroSection"),
    argumentSection: makeNodeComponent("argumentSection"),
    childhood: makeNodeComponent("childhood"),
    illustration: makeNodeComponent("illustration"),
    argumentSection2: makeNodeComponent("argumentSection2"),
    childhood2: makeNodeComponent("childhood2"),
    text2: makeNodeComponent("text2"),
    illustration2: makeNodeComponent("illustration2"),
    argumentSection3: makeNodeComponent("argumentSection3"),
    childhood3: makeNodeComponent("childhood3"),
    text3: makeNodeComponent("text3"),
    illustration3: makeNodeComponent("illustration3"),
    argumentSection4: makeNodeComponent("argumentSection4"),
    childhood4: makeNodeComponent("childhood4"),
    text4: makeNodeComponent("text4"),
    illustration4: makeNodeComponent("illustration4"),
    // Metadata about props expected for PlasmicArtist
    internalVariantProps: PlasmicArtist__VariantProps,
    internalArgProps: PlasmicArtist__ArgProps
  }
);

export default PlasmicArtist;
/* prettier-ignore-end */
